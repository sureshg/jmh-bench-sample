name: JMH CI

env:
  GITHUB_DEPLOY: 'true'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"

jobs:
  build:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: Run JMH Benchmark.
    timeout-minutes: 15
    continue-on-error: false
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        java: [ '11', '14' ]
    outputs:
      sha-version: ${{ steps.sha-version.outputs.version }}

    steps:
      - name: Check out the source code
        uses: actions/checkout@v2

      - name: Set up JDK 14
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        if: env.GITHUB_DEPLOY != 'true'
        run: ./mvnw -B verify

      - name: Create Version Number
        id: sha-version
        run: |
          SHA_VERSION=$(echo $GITHUB_SHA | cut -c1-7)
          echo "::set-output name=version::$SHA_VERSION"

      - name: Build & Deploy to GitHub Packages
        if: env.GITHUB_DEPLOY == 'true'
        run: |
          ./mvnw --settings .mvn/settings.xml deploy
        env:
          GITHUB_USER: ${{ github.repository_owner }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run JMH Benchmark
        if: success()
        run: |
          java -jar target/benchmarks.jar
          mkdir staging && cp target/benchmarks.jar staging

      - uses: actions/upload-artifact@v2.2.3
        if: env.GITHUB_DEPLOY != 'true'
        with:
          name: Package
          path: staging


  release:
    name: Release new version.
    needs: [ build ]
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        java: [ '14' ]
    steps:
      - name: check
        run: |
          echo "The SHA version from build job: ${{ needs.build.outputs.version }}"
       

       
